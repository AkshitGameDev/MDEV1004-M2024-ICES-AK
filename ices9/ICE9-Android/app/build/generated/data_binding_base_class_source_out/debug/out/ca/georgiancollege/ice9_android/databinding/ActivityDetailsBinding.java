// Generated by view binder compiler. Do not edit!
package ca.georgiancollege.ice9_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.georgiancollege.ice9_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText actorsEditText;

  @NonNull
  public final TextView actorsTextView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final LinearLayout cancelUpdateButtonLayout;

  @NonNull
  public final LinearLayout criticsLayout;

  @NonNull
  public final EditText criticsRatingEditText;

  @NonNull
  public final TextView criticsRatingTextView;

  @NonNull
  public final EditText descriptionMultiLine;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final EditText directorsEditText;

  @NonNull
  public final TextView directorsTextView;

  @NonNull
  public final EditText genreEditText;

  @NonNull
  public final TextView genreTextView;

  @NonNull
  public final EditText lengthEditText;

  @NonNull
  public final LinearLayout lengthLayout;

  @NonNull
  public final TextView lengthTextView;

  @NonNull
  public final LinearLayout lengthYearLayout;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final LinearLayout movieDetailsLayout;

  @NonNull
  public final EditText movieIDEditText;

  @NonNull
  public final TextView movieIDTextView;

  @NonNull
  public final LinearLayout mpaCriticsRatingLayout;

  @NonNull
  public final LinearLayout mpaLayout;

  @NonNull
  public final EditText mpaRatingEditText;

  @NonNull
  public final TextView mpaRatingTextView;

  @NonNull
  public final EditText studioEditText;

  @NonNull
  public final TextView studioTextView;

  @NonNull
  public final EditText titleEditText;

  @NonNull
  public final TextView titleLabel;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Button updateButton;

  @NonNull
  public final EditText writersEditText;

  @NonNull
  public final TextView writersTextView;

  @NonNull
  public final EditText yearEditText;

  @NonNull
  public final LinearLayout yearLayout;

  @NonNull
  public final TextView yearTextView;

  private ActivityDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText actorsEditText, @NonNull TextView actorsTextView,
      @NonNull Button cancelButton, @NonNull LinearLayout cancelUpdateButtonLayout,
      @NonNull LinearLayout criticsLayout, @NonNull EditText criticsRatingEditText,
      @NonNull TextView criticsRatingTextView, @NonNull EditText descriptionMultiLine,
      @NonNull TextView descriptionTextView, @NonNull EditText directorsEditText,
      @NonNull TextView directorsTextView, @NonNull EditText genreEditText,
      @NonNull TextView genreTextView, @NonNull EditText lengthEditText,
      @NonNull LinearLayout lengthLayout, @NonNull TextView lengthTextView,
      @NonNull LinearLayout lengthYearLayout, @NonNull ConstraintLayout main,
      @NonNull LinearLayout movieDetailsLayout, @NonNull EditText movieIDEditText,
      @NonNull TextView movieIDTextView, @NonNull LinearLayout mpaCriticsRatingLayout,
      @NonNull LinearLayout mpaLayout, @NonNull EditText mpaRatingEditText,
      @NonNull TextView mpaRatingTextView, @NonNull EditText studioEditText,
      @NonNull TextView studioTextView, @NonNull EditText titleEditText,
      @NonNull TextView titleLabel, @NonNull TextView titleTextView, @NonNull Button updateButton,
      @NonNull EditText writersEditText, @NonNull TextView writersTextView,
      @NonNull EditText yearEditText, @NonNull LinearLayout yearLayout,
      @NonNull TextView yearTextView) {
    this.rootView = rootView;
    this.actorsEditText = actorsEditText;
    this.actorsTextView = actorsTextView;
    this.cancelButton = cancelButton;
    this.cancelUpdateButtonLayout = cancelUpdateButtonLayout;
    this.criticsLayout = criticsLayout;
    this.criticsRatingEditText = criticsRatingEditText;
    this.criticsRatingTextView = criticsRatingTextView;
    this.descriptionMultiLine = descriptionMultiLine;
    this.descriptionTextView = descriptionTextView;
    this.directorsEditText = directorsEditText;
    this.directorsTextView = directorsTextView;
    this.genreEditText = genreEditText;
    this.genreTextView = genreTextView;
    this.lengthEditText = lengthEditText;
    this.lengthLayout = lengthLayout;
    this.lengthTextView = lengthTextView;
    this.lengthYearLayout = lengthYearLayout;
    this.main = main;
    this.movieDetailsLayout = movieDetailsLayout;
    this.movieIDEditText = movieIDEditText;
    this.movieIDTextView = movieIDTextView;
    this.mpaCriticsRatingLayout = mpaCriticsRatingLayout;
    this.mpaLayout = mpaLayout;
    this.mpaRatingEditText = mpaRatingEditText;
    this.mpaRatingTextView = mpaRatingTextView;
    this.studioEditText = studioEditText;
    this.studioTextView = studioTextView;
    this.titleEditText = titleEditText;
    this.titleLabel = titleLabel;
    this.titleTextView = titleTextView;
    this.updateButton = updateButton;
    this.writersEditText = writersEditText;
    this.writersTextView = writersTextView;
    this.yearEditText = yearEditText;
    this.yearLayout = yearLayout;
    this.yearTextView = yearTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actorsEditText;
      EditText actorsEditText = ViewBindings.findChildViewById(rootView, id);
      if (actorsEditText == null) {
        break missingId;
      }

      id = R.id.actorsTextView;
      TextView actorsTextView = ViewBindings.findChildViewById(rootView, id);
      if (actorsTextView == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.cancelUpdateButtonLayout;
      LinearLayout cancelUpdateButtonLayout = ViewBindings.findChildViewById(rootView, id);
      if (cancelUpdateButtonLayout == null) {
        break missingId;
      }

      id = R.id.criticsLayout;
      LinearLayout criticsLayout = ViewBindings.findChildViewById(rootView, id);
      if (criticsLayout == null) {
        break missingId;
      }

      id = R.id.criticsRatingEditText;
      EditText criticsRatingEditText = ViewBindings.findChildViewById(rootView, id);
      if (criticsRatingEditText == null) {
        break missingId;
      }

      id = R.id.criticsRatingTextView;
      TextView criticsRatingTextView = ViewBindings.findChildViewById(rootView, id);
      if (criticsRatingTextView == null) {
        break missingId;
      }

      id = R.id.descriptionMultiLine;
      EditText descriptionMultiLine = ViewBindings.findChildViewById(rootView, id);
      if (descriptionMultiLine == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.directorsEditText;
      EditText directorsEditText = ViewBindings.findChildViewById(rootView, id);
      if (directorsEditText == null) {
        break missingId;
      }

      id = R.id.directorsTextView;
      TextView directorsTextView = ViewBindings.findChildViewById(rootView, id);
      if (directorsTextView == null) {
        break missingId;
      }

      id = R.id.genreEditText;
      EditText genreEditText = ViewBindings.findChildViewById(rootView, id);
      if (genreEditText == null) {
        break missingId;
      }

      id = R.id.genreTextView;
      TextView genreTextView = ViewBindings.findChildViewById(rootView, id);
      if (genreTextView == null) {
        break missingId;
      }

      id = R.id.lengthEditText;
      EditText lengthEditText = ViewBindings.findChildViewById(rootView, id);
      if (lengthEditText == null) {
        break missingId;
      }

      id = R.id.lengthLayout;
      LinearLayout lengthLayout = ViewBindings.findChildViewById(rootView, id);
      if (lengthLayout == null) {
        break missingId;
      }

      id = R.id.lengthTextView;
      TextView lengthTextView = ViewBindings.findChildViewById(rootView, id);
      if (lengthTextView == null) {
        break missingId;
      }

      id = R.id.lengthYearLayout;
      LinearLayout lengthYearLayout = ViewBindings.findChildViewById(rootView, id);
      if (lengthYearLayout == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.movieDetailsLayout;
      LinearLayout movieDetailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (movieDetailsLayout == null) {
        break missingId;
      }

      id = R.id.movieIDEditText;
      EditText movieIDEditText = ViewBindings.findChildViewById(rootView, id);
      if (movieIDEditText == null) {
        break missingId;
      }

      id = R.id.movieIDTextView;
      TextView movieIDTextView = ViewBindings.findChildViewById(rootView, id);
      if (movieIDTextView == null) {
        break missingId;
      }

      id = R.id.mpaCriticsRatingLayout;
      LinearLayout mpaCriticsRatingLayout = ViewBindings.findChildViewById(rootView, id);
      if (mpaCriticsRatingLayout == null) {
        break missingId;
      }

      id = R.id.mpaLayout;
      LinearLayout mpaLayout = ViewBindings.findChildViewById(rootView, id);
      if (mpaLayout == null) {
        break missingId;
      }

      id = R.id.mpaRatingEditText;
      EditText mpaRatingEditText = ViewBindings.findChildViewById(rootView, id);
      if (mpaRatingEditText == null) {
        break missingId;
      }

      id = R.id.mpaRatingTextView;
      TextView mpaRatingTextView = ViewBindings.findChildViewById(rootView, id);
      if (mpaRatingTextView == null) {
        break missingId;
      }

      id = R.id.studioEditText;
      EditText studioEditText = ViewBindings.findChildViewById(rootView, id);
      if (studioEditText == null) {
        break missingId;
      }

      id = R.id.studioTextView;
      TextView studioTextView = ViewBindings.findChildViewById(rootView, id);
      if (studioTextView == null) {
        break missingId;
      }

      id = R.id.titleEditText;
      EditText titleEditText = ViewBindings.findChildViewById(rootView, id);
      if (titleEditText == null) {
        break missingId;
      }

      id = R.id.titleLabel;
      TextView titleLabel = ViewBindings.findChildViewById(rootView, id);
      if (titleLabel == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.updateButton;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.writersEditText;
      EditText writersEditText = ViewBindings.findChildViewById(rootView, id);
      if (writersEditText == null) {
        break missingId;
      }

      id = R.id.writersTextView;
      TextView writersTextView = ViewBindings.findChildViewById(rootView, id);
      if (writersTextView == null) {
        break missingId;
      }

      id = R.id.yearEditText;
      EditText yearEditText = ViewBindings.findChildViewById(rootView, id);
      if (yearEditText == null) {
        break missingId;
      }

      id = R.id.yearLayout;
      LinearLayout yearLayout = ViewBindings.findChildViewById(rootView, id);
      if (yearLayout == null) {
        break missingId;
      }

      id = R.id.yearTextView;
      TextView yearTextView = ViewBindings.findChildViewById(rootView, id);
      if (yearTextView == null) {
        break missingId;
      }

      return new ActivityDetailsBinding((ConstraintLayout) rootView, actorsEditText, actorsTextView,
          cancelButton, cancelUpdateButtonLayout, criticsLayout, criticsRatingEditText,
          criticsRatingTextView, descriptionMultiLine, descriptionTextView, directorsEditText,
          directorsTextView, genreEditText, genreTextView, lengthEditText, lengthLayout,
          lengthTextView, lengthYearLayout, main, movieDetailsLayout, movieIDEditText,
          movieIDTextView, mpaCriticsRatingLayout, mpaLayout, mpaRatingEditText, mpaRatingTextView,
          studioEditText, studioTextView, titleEditText, titleLabel, titleTextView, updateButton,
          writersEditText, writersTextView, yearEditText, yearLayout, yearTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
